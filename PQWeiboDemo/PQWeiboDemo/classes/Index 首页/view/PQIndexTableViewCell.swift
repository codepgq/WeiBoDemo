//
//  PQIndexTableViewCell.swift
//  PQWeiboDemo
//
//  Created by ios on 16/10/8.
//  Copyright ¬© 2016Âπ¥ ios. All rights reserved.
//

import UIKit
import SDWebImage

class PQIndexTableViewCell: UITableViewCell {
    /// ‰øùÂ≠òÈÖçÂõæÂÆΩÂ∫¶Á∫¶Êùü
    var pictureViewWidthCons : NSLayoutConstraint?
    /// ‰øùÂ≠òÈÖçÂõæÈ´òÂ∫¶Á∫¶Êùü
    var pictureViewHeightCons : NSLayoutConstraint?
    /// ‰øùÂ≠òÈÖçÂõæÈ°∂ÈÉ®Á∫¶Êùü
    var pictureViewTopCons : NSLayoutConstraint?
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        
        setUP()
    }
    
    private func setUP(){
        contentView.addSubview(backgroundImage)
        contentView.addSubview(topView)
        contentView.addSubview(contentLabel)
        contentView.addSubview(pictureView) // ÈÖçÂõæ
        contentView.addSubview(bottomView)
        
        //ËÉåÊôØ
        backgroundImage.pq_fill(referView: self)
        
       //È°∂ÈÉ®ËßÜÂõæ
        topView.pq_AlignInner(type: pq_AlignType.TopLeft, referView: contentView, size: CGSize(width: UIScreen.main.bounds.width, height: 60))
        topView.menuButtonClick = { (cell : PQIndexCellTopView) -> Void in
            guard  let block = self.showMenu else { return }
            block(self.topView)
        }
        //Ê≠£Êñá
        contentLabel.pq_AlignVertical(type: pq_AlignType.BottomLeft, referView: topView, size: nil, offset: CGPoint(x: 10, y: 10))
        
        // ÈÖçÂõæ
        let cons = pictureView.pq_AlignVertical(type: pq_AlignType.BottomLeft, referView: contentLabel, size: CGSize.zero, offset: CGPoint(x: 0, y: 10))
        
        // Ëé∑ÂèñÈÖçÂõæÁöÑÂÆΩÂ∫¶
        pictureViewWidthCons = pictureView.pq_Constraint(constraintsList: cons, attribute: NSLayoutAttribute.width)
        // Ëé∑ÂèñÈÖçÂõæÁöÑÈ´òÂ∫¶
        pictureViewWidthCons = pictureView.pq_Constraint(constraintsList: cons, attribute: NSLayoutAttribute.height)
        // Ëé∑ÂèñÈÖçÂõæÁöÑÈ°∂ÈÉ®Ë∑ùÁ¶ª
        pictureViewWidthCons = pictureView.pq_Constraint(constraintsList: cons, attribute: NSLayoutAttribute.top)
        
//        //Â∫ïÈÉ®ÊåâÈíÆ
        bottomView.pq_AlignVertical(type: pq_AlignType.BottomLeft, referView: pictureView, size: CGSize(width: UIScreen.main.bounds.width, height: 44), offset: CGPoint(x: -10, y: 10))
        
//        bottomView.pq_AlignInner(type: pq_AlignType.BottomRight, referView: contentView, size: nil, offset: CGPoint(x: -10, y: -10))
        
    }
    
    // ËÆæÁΩÆÊï∞ÊçÆ
    var statuses : PQStatusesModel?{
        didSet{
            //ËÆæÁΩÆÂ§¥ÂõæËßÜÂõæ‰ø°ÊÅØ
            topView.statuses = statuses
            
            //Áî®Êà∑ÂæÆÂçö‰ø°ÊÅØ Ê≠£Êñá
            contentLabel.text = statuses?.text
            
            // ÈÖçÂõæ
            pictureView.statuses = statuses
            let size = pictureView.carculatePictSize(statu: statuses!)
            pictureViewWidthCons?.constant = size.width
            pictureViewHeightCons?.constant = size.height
            layoutIfNeeded()
            print(size,pictureView.frame)
            
            
            
            // Êõ¥Êñ∞üëç ËΩ¨Âèë Â∑•ÂÖ∑Ê†è
            bottomView.updateTitle(forward: statuses?.repostsString, comment: statuses?.commentsString, zan: statuses?.attitudesString)
        }
    }
    
    
    func rowHeight(statuses : PQStatusesModel) -> CGFloat {
        //ËÆæÁΩÆ‰∏ÄÊ¨°
        self.statuses = statuses
        //Âº∫Âà∂Êõ¥Êñ∞
        self.layoutIfNeeded()
        //ËøîÂõûÂ∫ïÈÉ®ÁöÑÊúÄÂ§ßxÂÄº
        return bottomView.frame.maxY
    }
    
    /// ÊáíÂä†ËΩΩ UI
    // ËÉåÊôØ
    private lazy var backgroundImage :UIImageView = UIImageView(image: UIImage(named: "timeline_card_bottom_background"));
    
    var showMenu : ((_ cell : PQIndexCellTopView)->())?
    private lazy var topView : PQIndexCellTopView =  PQIndexCellTopView()
    
    // Ê≠£Êñá
    private lazy var contentLabel : UILabel = {
       let label = UILabel.createLabelWithFontSize(fontSize: 14, textColor: UIColor.darkGray)
        label.numberOfLines = 0
        label.preferredMaxLayoutWidth = UIScreen.main.bounds.width - 20
        return label
    }()
    
    /// ÈÖçÂõæ
    private lazy var pictureView : PQIndexCellPictureView = PQIndexCellPictureView()
    
    // Â∫ïÈÉ®ÊåâÈíÆ
    private lazy var bottomView : PQIndexCellBottomView = PQIndexCellBottomView()
    
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
}






